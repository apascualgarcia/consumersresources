import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
# rc('font', **{'family': 'sans-serif', 'sans-serif': ['Helvetica']})
# # for Palatino and other serif fonts use:
# # rc('font',**{'family':'serif','serif':['Palatino']})
# rc('text', usetex=False)

folder = './data_output'
filename = 'test'
save_folder = './plots'
save_name = filename
title = r'Nr25_Nc25_Nest0.1_Conn0.0832 (1000 runs per point)'
fs = 12
markeredgewidth = 2
markersize = 6
save_string = save_folder + '/' + save_name + '.pdf'
save_string = save_folder + '/proba_geq_one_large.pdf'
delta_crit = 0.0254095
scale = 228.84


def sigmoidal(x, a, b):
    result = []
    for el in x:
        result.append(1 / (1 + np.exp(-b * (el - a))) - 0.5)
    return np.array(result)


def polynomial(x, a):
    result = []
    for el in x:
        sum = 0.
        for i in range(len(a)):
            sum += a[i] * (el**i)
        result.append(sum)
    return np.array(result)


# data = np.loadtxt(folder + '/' + filename + '.out')
# delta = data[:, 0]
# proba = data[:, 1]

delta = [0.0157463, 0.0157765, 0.0158066, 0.0158367, 0.0158669, 0.015897, 0.0159271, 0.0159573, 0.0159874, 0.0160175, 0.0160477, 0.0160778, 0.0161079, 0.0161381, 0.0161682, 0.0161983, 0.0162285, 0.0162586, 0.0162887, 0.0163189, 0.016349, 0.0163791, 0.0164093, 0.0164394, 0.0164695, 0.0164997, 0.0165298, 0.0165599, 0.0165901, 0.0166202, 0.0166503, 0.0166805, 0.0167106, 0.0167407, 0.0167709, 0.016801, 0.0168311, 0.0168613, 0.0168914, 0.0169215, 0.0169517, 0.0169818, 0.017012, 0.0170421, 0.0170722, 0.0171024, 0.0171325, 0.0171626, 0.0171928, 0.0172229, 0.017253, 0.0172832, 0.0173133, 0.0173434, 0.0173736, 0.0174037, 0.0174338, 0.017464, 0.0174941, 0.0175242, 0.0175544, 0.0175845, 0.0176146, 0.0176448, 0.0176749, 0.017705, 0.0177352, 0.0177653, 0.0177954, 0.0178256, 0.0178557, 0.0178858, 0.017916, 0.0179461, 0.0179762, 0.0180064, 0.0180365, 0.0180666, 0.0180968, 0.0181269, 0.018157, 0.0181872, 0.0182173, 0.0182474, 0.0182776, 0.0183077, 0.0183378, 0.018368, 0.0183981, 0.0184282, 0.0184584, 0.0184885, 0.0185186, 0.0185488, 0.0185789, 0.018609, 0.0186392, 0.0186693, 0.0186994, 0.0187296, 0.0187597, 0.0187898, 0.01882, 0.0188501, 0.0188802, 0.0189104, 0.0189405, 0.0189706, 0.0190008, 0.0190309, 0.019061, 0.0190912, 0.0191213, 0.0191514, 0.0191816, 0.0192117, 0.0192418, 0.019272, 0.0193021, 0.0193323, 0.0193624, 0.0193925, 0.0194227, 0.0194528, 0.0194829, 0.0195131, 0.0195432, 0.0195733, 0.0196035, 0.0196336, 0.0196637, 0.0196939, 0.019724, 0.0197541, 0.0197843, 0.0198144, 0.0198445, 0.0198747, 0.0199048, 0.0199349, 0.0199651, 0.0199952, 0.0200253, 0.0200555, 0.0200856, 0.0201157, 0.0201459, 0.020176, 0.0202061, 0.0202363, 0.0202664, 0.0202965, 0.0203267, 0.0203568, 0.0203869, 0.0204171, 0.0204472, 0.0204773, 0.0205075, 0.0205376, 0.0205677, 0.0205979, 0.020628, 0.0206581, 0.0206883, 0.0207184, 0.0207485, 0.0207787, 0.0208088, 0.0208389, 0.0208691, 0.0208992, 0.0209293, 0.0209595, 0.0209896, 0.0210197, 0.0210499, 0.02108, 0.0211101, 0.0211403, 0.0211704, 0.0212005, 0.0212307, 0.0212608, 0.0212909, 0.0213211, 0.0213512, 0.0213813, 0.0214115, 0.0214416, 0.0214717, 0.0215019, 0.021532, 0.0215622, 0.0215923, 0.0216224, 0.0216526, 0.0216827, 0.0217128, 0.021743, 0.0217731, 0.0218032, 0.0218334, 0.0218635, 0.0218936, 0.0219238, 0.0219539, 0.021984, 0.0220142, 0.0220443, 0.0220744, 0.0221046, 0.0221347, 0.0221648, 0.022195, 0.0222251, 0.0222552, 0.0222854, 0.0223155, 0.0223456, 0.0223758, 0.0224059, 0.022436, 0.0224662, 0.0224963, 0.0225264, 0.0225566, 0.0225867, 0.0226168, 0.022647, 0.0226771, 0.0227072, 0.0227374, 0.0227675, 0.0227976, 0.0228278, 0.0228579, 0.022888, 0.0229182, 0.0229483, 0.0229784, 0.0230086, 0.0230387, 0.0230688, 0.023099, 0.0231291, 0.0231592, 0.0231894, 0.0232195, 0.0232496,
         0.0232798, 0.0233099, 0.02334, 0.0233702, 0.0234003, 0.0234304, 0.0234606, 0.0234907, 0.0235208, 0.023551, 0.0235811, 0.0236112, 0.0236414, 0.0236715, 0.0237016, 0.0237318, 0.0237619, 0.0237921, 0.0238222, 0.0238523, 0.0238825, 0.0239126, 0.0239427, 0.0239729, 0.024003, 0.0240331, 0.0240633, 0.0240934, 0.0241235, 0.0241537, 0.0241838, 0.0242139, 0.0242441, 0.0242742, 0.0243043, 0.0243345, 0.0243646, 0.0243947, 0.0244249, 0.024455, 0.0244851, 0.0245153, 0.0245454, 0.0245755, 0.0246057, 0.0246358, 0.0246659, 0.0246961, 0.0247262, 0.0247563, 0.0247865, 0.0248166, 0.0248467, 0.0248769, 0.024907, 0.0249371, 0.0249673, 0.0249974, 0.0250275, 0.0250577, 0.0250878, 0.0251179, 0.0251481, 0.0251782, 0.0252083, 0.0252385, 0.0252686, 0.0252987, 0.0253289, 0.025359, 0.0253891, 0.0254193, 0.0254494, 0.0254795, 0.0255097, 0.0255398, 0.0255699, 0.0256001, 0.0256302, 0.0256603, 0.0256905, 0.0257206, 0.0257507, 0.0257809, 0.025811, 0.0258411, 0.0258713, 0.0259014, 0.0259315, 0.0259617, 0.0259918, 0.026022, 0.0260521, 0.0260822, 0.0261124, 0.0261425, 0.0261726, 0.0262028, 0.0262329, 0.026263, 0.0262932, 0.0263233, 0.0263534, 0.0263836, 0.0264137, 0.0264438, 0.026474, 0.0265041, 0.0265342, 0.0265644, 0.0265945, 0.0266246, 0.0266548, 0.0266849, 0.026715, 0.0267452, 0.0267753, 0.0268054, 0.0268356, 0.0268657, 0.0268958, 0.026926, 0.0269561, 0.0269862, 0.0270164, 0.0270465, 0.0270766, 0.0271068, 0.0271369, 0.027167, 0.0271972, 0.0272273, 0.0272574, 0.0272876, 0.0273177, 0.0273478, 0.027378, 0.0274081, 0.0274382, 0.0274684, 0.0274985, 0.0275286, 0.0275588, 0.0275889, 0.027619, 0.0276492, 0.0276793, 0.0277094, 0.0277396, 0.0277697, 0.0277998, 0.02783, 0.0278601, 0.0278902, 0.0279204, 0.0279505, 0.0279806, 0.0280108, 0.0280409, 0.028071, 0.0281012, 0.0281313, 0.0281614, 0.0281916, 0.0282217, 0.0282519, 0.028282, 0.0283121, 0.0283423, 0.0283724, 0.0284025, 0.0284327, 0.0284628, 0.0284929, 0.0285231, 0.0285532, 0.0285833, 0.0286135, 0.0286436, 0.0286737, 0.0287039, 0.028734, 0.0287641, 0.0287943, 0.0288244, 0.0288545, 0.0288847, 0.0289148, 0.0289449, 0.0289751, 0.0290052, 0.0290353, 0.0290655, 0.0290956, 0.0291257, 0.0291559, 0.029186, 0.0292161, 0.0292463, 0.0292764, 0.0293065, 0.0293367, 0.0293668, 0.0293969, 0.0294271, 0.0294572, 0.0294873, 0.0295175, 0.0295476, 0.0295777, 0.0296079, 0.029638, 0.0296681, 0.0296983, 0.0297284, 0.0297585, 0.0297887, 0.0298188, 0.0298489, 0.0298791, 0.0299092, 0.0299393, 0.0299695, 0.0299996, 0.0300297, 0.0300599, 0.03009, 0.0301201, 0.0301503, 0.0301804, 0.0302105, 0.0302407, 0.0302708, 0.0303009, 0.0303311, 0.0303612, 0.0303913, 0.0304215, 0.0304516, 0.0304818, 0.0305119, 0.030542, 0.0305722, 0.0306023, 0.0306324, 0.0306626, 0.0306927, 0.0307228, 0.030753, 0.0307831]

proba = [-0.44, -0.44, -0.36, -0.46, -0.46, -0.42, -0.36, -0.4, -0.36, -0.44, -0.44, -0.46, -0.46, -0.46, -0.44, -0.48, -0.46, -0.4, -0.42, -0.44, -0.44, -0.48, -0.44, -0.42, -0.44, -0.4, -0.38, -0.46, -0.36, -0.44, -0.32, -0.46, -0.46, -0.44, -0.4, -0.42, -0.42, -0.4, -0.48, -0.46, -0.38, -0.44, -0.32, -0.38, -0.32, -0.42, -0.38, -0.46, -0.4, -0.38, -0.38, -0.38, -0.46, -0.34, -0.46, -0.44, -0.36, -0.34, -0.36, -0.26, -0.36, -0.42, -0.3, -0.4, -0.34, -0.3, -0.42, -0.4, -0.32, -0.38, -0.38, -0.36, -0.3, -0.36, -0.4, -0.28, -0.36, -0.44, -0.4, -0.36, -0.36, -0.38, -0.34, -0.36, -0.36, -0.44, -0.3, -0.32, -0.34, -0.3, -0.34, -0.32, -0.38, -0.24, -0.42, -0.32, -0.36, -0.32, -0.36, -0.34, -0.36, -0.3, -0.36, -0.36, -0.32, -0.24, -0.4, -0.26, -0.22, -0.44, -0.32, -0.36, -0.36, -0.2, -0.3, -0.3, -0.22, -0.28, -0.36, -0.28, -0.32, -0.16, -0.32, -0.14, -0.26, -0.2, -0.2, -0.26, -0.3, -0.2, -0.26, -0.3, -0.32, -0.26, -0.32, -0.14, -0.32, -0.3, -0.22, -0.24, -0.24, -0.28, -0.3, -0.2, -0.32, -0.28, -0.22, -0.26, -0.2, -0.1, -0.3, -0.28, -0.26, -0.2, -0.26, -0.2, -0.22, -0.26, -0.04, -0.18, -0.26, -0.28, -0.32, -0.3, -0.18, -0.28, -0.16, -0.24, -0.26, -0.22, -0.2, -0.24, -0.24, -0.22, -0.14, -0.26, -0.28, -0.18, -0.2, -0.22, -0.18, -0.12, -0.2, -0.18, -0.28, -0.24, -0.2, -0.2, -0.24, -0.32, -0.2, -0.3, -0.26, -0.22, -0.24, -0.1, -0.22, -0.14, -0.2, -0.2, -0.12, -0.04, -0.12, -0.2, -0.2, -0.14, -0.18, -0.22, -0.02, -0.22, -0.1, -0.08, -0.22, -0.16, -0.16, -0.04, -0.08, -0.04, -0.1, -0.16, -0.18, -0.18, -0.1, -0.08, -0.16, -0.1, -0.1, -0.14, -0.1, -0.14, 0.02, -0.18, -0.2, -0.18, -0.14, -0.14, -0.12, -0.12, 1.11022e-16, -0.08, -0.22, -0.2, -0.08, -
         0.04, -0.08, -0.16, -0.06, -0.14, -0.1, -0.04, -0.08, -0.26, -0.14, -0.06, -0.06, -0.18, -0.06, -0.1, -0.1, -0.14, -0.14, -0.14, -0.16, -0.12, 0.02, -0.08, 0.02, -0.08, -0.1, -0.06, -0.16, 1.11022e-16, -0.16, 0.02, -0.08, 0.04, -0.04, 0.04, -0.14, -0.02, -0.1, -0.04, -0.08, -0.06, 1.11022e-16, -0.12, 0.12, -0.04, 0.08, 0.02, -0.06, -0.14, -0.08, -0.02, 0.02, -0.02, 0.02, 0.18, -0.08, 1.11022e-16, 0.04, 0.06, -0.06, 0.1, 0.12, 0.02, 0.12, -0.02, 0.06, 0.06, -0.12, -0.1, -0.04, 0.02, 0.04, 0.04, -0.02, -0.06, 0.06, 0.08, 1.11022e-16, 0.04, 1.11022e-16, 1.11022e-16, -0.1, -0.06, 0.14, 0.08, 0.02, 0.02, 0.12, 0.12, 0.02, -0.1, 0.1, 1.11022e-16, 1.11022e-16, 0.06, 1.11022e-16, 0.1, 0.1, 0.08, 0.06, 0.08, -0.06, 0.04, 0.04, 0.18, 0.02, -0.06, -0.02, -0.02, 0.12, -0.04, 0.04, 0.08, 0.06, 1.11022e-16, 1.11022e-16, 0.06, 0.12, 0.16, 0.12, 0.02, 0.12, 0.08, 0.16, 0.12, 0.14, 0.08, 0.1, 0.06, 0.08, -0.02, 0.04, 1.11022e-16, 0.06, 0.08, 0.04, 0.14, 1.11022e-16, 0.18, 0.16, 0.12, 0.06, 0.02, 0.06, 0.16, 0.14, 0.1, 0.1, 0.18, 0.06, 0.16, 0.08, 0.2, 0.14, 0.14, 0.22, 1.11022e-16, 0.16, 0.14, 0.12, 0.08, 0.18, 0.06, -0.02, 0.14, 0.18, 0.14, 0.2, 0.06, 0.14, 0.1, 0.24, 0.18, 0.3, 0.1, 0.18, 0.16, 0.14, 0.14, 0.04, 0.1, 0.24, 0.12, 0.2, 0.14, 0.28, 0.16, 0.26, 0.24, 0.14, 0.24, 0.22, 0.14, 0.1, 0.1, 0.16, 0.3, 0.22, 0.12, 0.08, 0.14, 0.22, 0.12, 0.2, 0.18, 0.18, 0.2, 0.2, 0.16, 0.3, 0.18, 0.16, 0.2, 0.16, 0.2, 0.24, 0.2, 0.26, 0.28, 0.26, 0.14, 0.1, 0.36, 0.2, 0.22, 0.24, 0.16, 0.22, 0.34, 0.22, 0.28, 0.26, 0.24, 0.14, 0.28, 0.38, 0.2, 0.18, 0.38, 0.18, 0.28, 0.28, 0.2, 0.16, 0.22, 0.22, 0.12, 0.3, 0.3, 0.3, 0.22, 0.26, 0.24, 0.28, 0.26, 0.32, 0.28]

interval = np.linspace(min(delta), max(delta), 1000)
a = [-0.00676963, 12.3858, -4318.25, 567999, -
     2.30935e+07, 3.91162e+08, -2.41507e+09]
fitted_curve = polynomial(interval, a)
fitted_curve = sigmoidal(interval, delta_crit, scale)
# for i in range(len(delta)):
#     print(str(delta[i]) + ',')

fig1 = plt.figure()
ax1 = fig1.add_subplot(111)
ax1.plot(delta, proba, '+', linestyle='none', markersize=markersize)
ax1.plot(interval, fitted_curve)
ax1.set_title(title)
ax1.set_xlabel(r"$\Delta$", fontsize=fs)
ax1.set_ylabel(r"Prob(#extinctions $\geq$ 1)", fontsize=fs)
plt.savefig(save_string)
plt.show()
plt.clf()
